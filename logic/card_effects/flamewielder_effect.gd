# res://logic/card_effects/flamewielder_effect.gd
extends SummonCardResource

# _summon_instance is the Flamewielder SummonInstance itself.
func _on_arrival(_summon_instance: SummonInstance, _active_combatant: Combatant, opponent_combatant: Combatant, battle_instance: Battle):
	var flamewielder_instance_id: int = _summon_instance.instance_id
	var flamewielder_card_id: String = _summon_instance.card_resource.id # "Flamewielder"

	print("Flamewielder (Instance: %s) arrival trigger." % flamewielder_instance_id)
	
	var damage_amount: int = 1
	var affected_locations_for_visual: Array[String] = []
	var actual_targets_hit: Array[SummonInstance] = []

	# Find targets (only opponent's creatures)
	for creature_instance_in_lane in opponent_combatant.lanes:
		if creature_instance_in_lane != null:
			actual_targets_hit.append(creature_instance_in_lane)
			affected_locations_for_visual.append("%s lane %d (ID: %s)" % [opponent_combatant.combatant_name, creature_instance_in_lane.lane_index + 1, creature_instance_in_lane.instance_id])

	if actual_targets_hit.is_empty():
		print("...Flamewielder (Instance: %s) found no opposing creatures to damage." % flamewielder_instance_id)
		battle_instance.add_event({
			"event_type": "log_message",
			"message": "Flamewielder (Instance: %s) found no opposing targets." % flamewielder_instance_id,
			"source_card_id": flamewielder_card_id,
			"source_instance_id": flamewielder_instance_id
		})
		return

	# Visual effect for the Flamewielder's general attack/ability activation
	battle_instance.add_event({
		"event_type": "visual_effect",
		"effect_id": "flamewielder_aoe_damage_cast", # Or similar, for the overall effect
		"instance_id": flamewielder_instance_id, # The Flamewielder is the source of this visual
		"target_locations": affected_locations_for_visual, # Could target all opponent lanes or specific creatures
		"details": {"base_damage": damage_amount, "num_targets": actual_targets_hit.size()},
		"source_card_id": flamewielder_card_id,
		"source_instance_id": flamewielder_instance_id
	})

	print("...Flamewielder (Instance: %s) dealing %d damage to %d opposing creatures." % [flamewielder_instance_id, damage_amount, actual_targets_hit.size()])
	
	# Apply damage to all targeted opponent creatures
	for target_creature_instance in actual_targets_hit:
		if is_instance_valid(target_creature_instance):
			# Call SummonInstance.take_damage with Flamewielder as the source
			# Signature: take_damage(amount: int, p_source_card_id: String, p_source_instance_id: int)
			target_creature_instance.take_damage(damage_amount, flamewielder_card_id, flamewielder_instance_id)
			# The creature_hp_change event generated by take_damage will be sourced to the Flamewielder
