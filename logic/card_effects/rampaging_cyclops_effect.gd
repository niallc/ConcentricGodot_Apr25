# res://logic/card_effects/rampaging_cyclops_effect.gd
extends SummonCardResource

# _summon_instance is the Rampaging Cyclops SummonInstance itself.
func _on_arrival(_summon_instance: SummonInstance, active_combatant: Combatant, opponent_combatant: Combatant, battle_instance: Battle):
	var cyclops_instance_id: int = _summon_instance.instance_id
	var cyclops_card_id: String = _summon_instance.card_resource.id # "RampagingCyclops"

	print("Rampaging Cyclops (Instance: %s) arrival trigger (damages ALL creatures, including self)." % cyclops_instance_id)
	
	var damage_amount: int = 1
	var affected_locations_for_visual: Array[String] = []
	var actual_targets_hit: Array[SummonInstance] = []

	# Find ALL targets (friendly, enemy, including self)
	for creature_instance_in_lane in active_combatant.lanes:
		if creature_instance_in_lane != null: # This will include the Cyclops itself if it's in one of these lanes
			actual_targets_hit.append(creature_instance_in_lane)
			affected_locations_for_visual.append("%s lane %d (ID: %s)" % [active_combatant.combatant_name, creature_instance_in_lane.lane_index + 1, creature_instance_in_lane.instance_id])
	
	for creature_instance_in_lane in opponent_combatant.lanes:
		if creature_instance_in_lane != null:
			actual_targets_hit.append(creature_instance_in_lane)
			affected_locations_for_visual.append("%s lane %d (ID: %s)" % [opponent_combatant.combatant_name, creature_instance_in_lane.lane_index + 1, creature_instance_in_lane.instance_id])

	if actual_targets_hit.is_empty():
		# This case should be rare if the Cyclops itself is on the board.
		print("...Rampaging Cyclops (Instance: %s) found no creatures to damage (should at least find self if on board)." % cyclops_instance_id)
		battle_instance.add_event({
			"event_type": "log_message",
			"message": "Rampaging Cyclops (Instance: %s) found no targets (not even self?)." % cyclops_instance_id,
			"source_card_id": cyclops_card_id,
			"source_instance_id": cyclops_instance_id
		})
		return

	# Visual effect for the Cyclops's stomp/AoE
	battle_instance.add_event({
		"event_type": "visual_effect",
		"effect_id": "rampaging_cyclops_stomp", 
		"instance_id": cyclops_instance_id, # The Cyclops is the source/subject of this visual
		"target_locations": affected_locations_for_visual, # Or simply "all_lanes"
		"details": {"base_damage": damage_amount, "num_targets_hit": actual_targets_hit.size()},
		"source_card_id": cyclops_card_id,
		"source_instance_id": cyclops_instance_id
	})

	print("...Rampaging Cyclops (Instance: %s) dealing %d damage to %d creatures." % [cyclops_instance_id, damage_amount, actual_targets_hit.size()])
	
	# Apply damage to all targeted creatures
	for target_creature_instance in actual_targets_hit:
		if is_instance_valid(target_creature_instance):
			# Call SummonInstance.take_damage with Cyclops as the source
			# Signature: take_damage(amount: int, p_source_card_id: String, p_source_instance_id: int)
			target_creature_instance.take_damage(damage_amount, cyclops_card_id, cyclops_instance_id)
			# The creature_hp_change event generated by take_damage will be sourced to the Cyclops
